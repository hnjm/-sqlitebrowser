language: cpp
sudo: required
dist: trusty

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "prSAtsBHMML0TgCZqDh3SmHMAZsWNCdDdFmAFyZKR3OlSDfqnnfTuBwBy7OR9XEXUE5MAUPJrj3MFq9jT1yswt9sv2Ptm9zTu099HxMlpuW/SfOUsZIwUiVpChQGNK5yUjKAqJHv8HCosUIgy6nE2UzzitBQfvGZEzv9nRbBMCQ="

before_install:
  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
  - sudo add-apt-repository ppa:likemartinma/devel -y
  - sudo add-apt-repository --yes ppa:beineri/opt-qt571-trusty
  - sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq
  - sudo apt-get --force-yes install qt57base qt57translations qt57tools
  - sudo apt-get --force-yes install libsqlite3-dev libantlr-dev
  - sudo apt-get --force-yes install g++-5
  - QT_ENV_SCRIPT=$(find /opt -name 'qt*-env.sh')
  - source $QT_ENV_SCRIPT
  - export CXX="g++-5" CC="gcc-5"

addons:
  coverity_scan:
    project:
      name: "sqlitebrowser/sqlitebrowser"
      description: "DB4S"
    notification_email: mkleusberg@gmail.com
    build_command_prepend: "cov-configure --comptype gcc --compiler g++-5 --template;mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DENABLE_TESTING=ON .."
    build_command: "make VERBOSE=1"
    branch_pattern: coverity_scan

notifications:
  email:
    recipients:
      - mkleusberg@gmail.com
    on_success: never
on_failure: always
